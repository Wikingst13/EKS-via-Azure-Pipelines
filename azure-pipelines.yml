trigger:
  - main  # Запускать пайплайн при пуше в main

variables:
  imageName: 'my-app'
  awsRegion: 'us-east-1'
  clusterName: 'my-eks-cluster'
  ecrRegistry: '767398133420.dkr.ecr.us-east-1.amazonaws.com'

pool:
  vmImage: 'ubuntu-latest'  # Запускать на Ubuntu

stages:
  - stage: Build
    displayName: 'Build Docker Image'
    jobs:
      - job: BuildJob
        steps:
          - checkout: self  # Скачиваем код из репозитория
          - task: Docker@2  # Используем встроенный Docker task
            displayName: 'Login to ECR'
            inputs:
              command: 'login'
              containerRegistry: 'ecr-docker-connection'
          - task: AWSCLI@1
            displayName: 'Login to AWS ECR'
            inputs:
            awsCredentials: 'aws-ecr-connection'  # <-- имя твоего AWS Service Connection!
            regionName: 'us-east-1'
            command: 'ecr'
            arguments: 'get-login-password --region us-east-1 | docker login --username AWS --password-stdin 767398133420.dkr.ecr.us-east-1.amazonaws.com'
            displayName: 'Manual ECR Login Test' 
          - task: Docker@2
            displayName: 'Build and Push Docker image'
            inputs:
              command: 'buildAndPush'
              repository: '$(imageName)'
              dockerfile: 'Dockerfile'
              containerRegistry: 'ecr-docker-connection'
              tags: 'latest'

  - stage: Deploy
    displayName: 'Deploy to EKS'
    dependsOn: Build  # Выполняем Deploy только если Build успешен
    jobs:
      - job: DeployJob
        steps:
          - checkout: self
          - task: AWSCLI@1  # Генерируем kubeconfig через AWS CLI
            displayName: 'Configure kubeconfig'
            inputs:
              awsCredentials: 'aws-ecr-connection'
              regionName: '$(awsRegion)'
              command: 'eks'
              arguments: 'update-kubeconfig --name $(clusterName) --region $(awsRegion)'
          - script: |
              kubectl get nodes  # Проверяем доступ к EKS
            displayName: 'Check Cluster Access'
          - task: Kubernetes@1
            displayName: 'Deploy Kubernetes manifests'
            inputs:
              connectionType: 'None'  # kubeconfig уже настроен через AWSCLI
              namespace: 'dev'
              command: 'apply'
              useConfigurationFile: true
              configuration: 'k8s/deployment.yaml'
