trigger:
  - main  # Запускать пайплайн при пуше в main

variables:
  imageName: 'my-app_131289'
  awsRegion: 'us-east-1'
  clusterName: 'my-eks-cluster'
  ecrRegistry: '767398133420.dkr.ecr.us-east-1.amazonaws.com'

pool:
  vmImage: 'ubuntu-latest'  # Запускать на Ubuntu

stages:
  - stage: Build
    displayName: 'Build Docker Image'
    jobs:
      - job: BuildJob
        steps:
          - checkout: self  # Скачиваем код из репозитория
          - task: Docker@2  # Используем встроенный Docker task
            displayName: 'Login to ECR'
            inputs:
              command: 'login'
              containerRegistry: 'ecr-docker-connection'
          - task: AWSCLI@1
            displayName: 'Login to AWS ECR'
            inputs:
              awsCredentials: 'aws-ecr-connection'           # <-- имя твоего AWS Service Connection
              regionName: 'us-east-1'
              awsCommand: 'ecr'                                  # <-- обязательно!
              awsSubCommand: 'get-login-password'                # <-- обязательно!
              arguments: '--region us-east-1 | docker login --username AWS --password-stdin 767398133420.dkr.ecr.us-east-1.amazonaws.com'

          - task: Docker@2
            displayName: 'Login to ECR'
            inputs:
              command: 'login'
              containerRegistry: 'ecr-docker-connection'      # <-- обязательно укажи здесь твой Service Connection

          - script: |
              echo "=== Docker info ==="
              docker info
            displayName: 'Check Docker login status'
          
          - task: Docker@2
            displayName: 'Build and Push Docker image'
            inputs:
              command: 'buildAndPush'
              repository: 'my-app_131289'
              dockerfile: 'Dockerfile'
              containerRegistry: 'ecr-docker-connection'
              tags: 'latest'

  - stage: Deploy
    displayName: 'Deploy to EKS'
    dependsOn: Build
    jobs:
     - job: DeployJob
       variables:                            # <-- Вот тут нужно!
         awsRegion: 'us-east-1'
         clusterName: 'my-eks-cluster'
       steps:
         - checkout: self
         - script: |
             echo "=== Проверка переменных ==="
             echo "Cluster Name = $(clusterName)"
             echo "AWS Region   = $(awsRegion)"
           displayName: 'Check Variables'
 
         - task: AWSCLI@1
           displayName: 'Configure kubeconfig'
           inputs:
             awsCredentials: 'aws-ecr-connection'
             regionName: 'us-east-1'
             awsCommand: 'eks'
             # awsSubCommand: 'update-kubeconfig'          # <-- УБРАТЬ!
             arguments: "update-kubeconfig --name my-eks-cluster --region us-east-1"
        
 
         - script: |
             kubectl get nodes
           displayName: 'Check Cluster Access'
 
         - task: Kubernetes@1
           displayName: 'Deploy Kubernetes manifests'
           inputs:
             connectionType: 'None'
             namespace: 'dev'
             command: 'apply'
             useConfigurationFile: true
             configuration: 'k8s/deployment.yaml'
 